2018-05-29
fixed in assp 2.6.2 *Fortress* build 18148:


changed:

- admins are now able to remove global and domain based entries from whitelist using the emailinterface
  admins are now able to delete global and domain based database records from the whitelistdb using the emailinterface
  admins are now able to delete global and domain based database records from the whitelistdb using the webinterface (GUI)

'EmailWhitelistRemove','Remove from Whitelist Address'
  'Any mail sent by local/authenticated users to this username will be interpreted as a request to remove addresses from the whitelist. Do not put the full address here, just the user part.
  For example: asspnotwhite
  
  EmailAdmins and EmailAdminReportsTo are able to force global or domain based removal and deletion requests as well as removal and deletion requests for other users - like:
  
  sender@domain.org,*
  sender@domain.org,@localdomain.org
  sender@domain.org,otheruser@localdomain.org
  
  Per default a removal request is processed. To delete records from whitelistdb, write "delete" (unquoted) into the subject of the report mail.
  NOTICE: removing whitelist entries will mark the records as NOT whitelisted!
  NOTICE: deleting whitelist entries will DELETE ALL related records! For example: an emailaddress is globaly whitelisted but markted as not whitelisted for a specific domain.
  Now if you DELETE the domain based record, all domain related records will be deleted - but because of the global whitelisting,
  all emailaddresses from this domain are now treated as whitelisted!





2018-05-17
fixed in assp 2.6.2 *Fortress* build 18137:

- ASSP_RSSSelectCode was not encrypted

- webSSLRequireClientCert was not working like expected

- unexpected behavior or exception, if a schedule was configured while any scheduled task was running



2018-05-11
fixed in assp 2.6.2 *Fortress* build 18131:

- the service ID was not shown correctly in the GUI on nix systems

- ASSP_AFC 4.81 fixes a perl crash : Can't locate object method "name" via package "Email::MIME"

- ASSP_RSS 1.05 fixes: links were not working in some RSS feed readers



2018-05-08
fixed in assp 2.6.1 *Fortress* build 18128:

- HMM was not working in build 18120, if 'DoPrivatSpamdb' was set to NO


2018-05-03
fixed in assp 2.6.2 *Fortress* build 18123:

- Running multiple assp instances on a single windows host as windows service failed, because all instances used the same service name. The GUI now shows the instance name at the top.

- The error message "Error: DKIM-cfg - no configuration left for any domain" was shown at startup, even genDKIM and genARC were both not selected.



2018-04-29
fixed in assp 2.6.2 *Fortress* build 18119:

- performance improvement for the rebuildspamdb task if pravacy levels are used for Bayesian and HMM

- disclaimer removal statistic output for the rebuild task

- using the analyzer web interface no longer prevents the MainThread from getting new SMTP connections



2018-04-27
fixed in assp 2.6.2 *Fortress* build 18117:


- changes in build 18112 and 18114 caused bombDataRe to check also the header of an email



2018-04-24
fixed in assp 2.6.2 *Fortress* build 18114:

- this release contains a significant performance improvement for the Bayesian and HMM checks - and the rebuildspamdb task



2018-04-22
fixed in assp 2.6.2 *Fortress* build 18112:

- this release contains a significant performance improvement for unicode character processing
  
- this release contains a significant performance improvement for regular expression processing


changed:

- DoNoFrom now also checks for RFC822 / RFC 1522 compliant email addresses and a check for a valid TLD is included



2018-04-20
fixed in assp 2.6.2 *Fortress* build 18110:

- certificates that provides the email address in SAN, were not accepted by ASSP_AFC for SMIME signing
  ASSP_AFC.pm is updated to version 4.80

changed:

- if ARC signing is enabled, assp will add a ARC-signature to reports and notification

- improved handling of DKIMWLAddresses and DKIMNPAddresses

- improved handling of Authentication Results provided by a trustedAuthForwarders host

- the default DKIM configuration file dkim/dkimconfig.txt is updated to version 1.02



2018-04-17
fixed in assp 2.6.2 *Fortress* build 18107:

- ASSP_AFC has left open a filehandle, which may cause an "too many open filehandles" exception
  version 7.49 fixes this problem

- the MIME header parsing in severa features for two equal MIME header tags was incomplete, if the two headers occured directly after each other

- IPv6 addresses were not exported by ExportExtreme


added:

'genARC','Generate and Add Authenticated Received Chain (ARC) signatures to all messages'
 If selected, ASSP will add "http://arc-spec.org" Authenticated Received Chain (ARC) signatures to all messages, if it finds a valid DKIM configuration in DKIMgenConfig for the sending domain.
 This will also be done for noprocessing mails. If available, the check results for SPF, DKIM and DMARC will be provided in the generated ARC-signature.
 This requires an installed Mail::DKIM"module in PERL.

'DoARC','Validate Authenticated Received Chain (ARC) Signatures'
  'If enabled, "http://arc-spec.org" Authenticated Received Chain (ARC) signed Mails are checked for the right signature sequence and contents.
  ASSP will show the ARC results and will trust the provided Authenticated Results for DKIM, SPF and DMARC if the signing host/domain matches 'trustedAuthForwarders'.
  This requires an installed Mail::DKIM::Verifier module in PERL.


changed:

- the FromStrict and the DomainIP check are moved after the SenderBase check.


'DKIMgenConfig','The File with the DKIM and ARC configurations*',
 The file that contains the DKIM and ARC configuration. A description how to configure DKIM, DomainKey and ARC could be found in the default file dkim/dkimconfig.txt.

'DoNoSpoofing4From','Do NoSpoofing for from:'
  'Do the NoSpoofing check also for header 'from:', 'sender:', 'reply-to:' and 'errors-to:' addresses.

'DoNoFrom','Check for Existing and Valid From: and Sender: Header Tag and Address',
  'If enabled, the MIME header is checked for valid From: and Sender: header tags.
  This header check fails and faults are counted, if both headers (From: and Sender:) are missing - or if any of these headers contains not a valid email address - 
  or if multiple of the same headers are found.
  The scoring value nofromValencePB is added for each detected fault.

'DoNoFromWL','Do DoNoFrom for Whitelisted'
  'Check for existing From: or Sender: header and address for whitelisted emails.

'DoNoFromNP','Do DoNoFrom for NoProcessing'
  'Check for existing From: or Sender: header and address for noprocessing emails.

'trustedAuthForwarders','X-Original-Authentication-Results and Authenticated Received Chain(ARC) Trusted Forwarder*'
....
 If DoARC is enabled and a host match is found for the most recent "http://arc-spec.org" Authenticated-Received-Chain(ARC)-Signature instance (highest instance number),
 the SPF-check, the DKIM-check and the DMARC-check will fully trust the provided ARC results.
....

'RunRebuildNow','Run RebuildSpamdb now'
....
  An real problem may become disclaimers and privat and corporate signatues. They are always added to outgoing mails, but also to local mails and reports.
  They can be found in most of the answers to your mails. And for example, they may be added by spammers to there spam mails - trying to fake good mails.
  Nobody can say, how the occurrence of such a disclaimer will affect the HMM and Bayesian results. It may possible, that these results differs from day to day, or block good mails, or let spam pass.
  The only way to prevent such results, is to remove the disclaimers, before the rebuildspamdb task builds the spamdb and HMMdb.
  To tell assp, which are your disclaimers, open the file files/disclaimer.txt using the "disclaimer definition" button below and put the disclaimers in to this file,
  the same way they are shown in your mail client. If you want to define multiple disclaimers, separate them by a line with a single dot.
  Lines in this file starting with an "#" are considered a comment, empty lines are ignored. ASSP will build a regular expression to identify and remove the disclaimers.
  
  example:
  
  # a comment
  your first disclaimers first line here
  your first disclaimers second line here
  .
  # also a comment
  your second disclaimers first line here
  your second disclaimers second line here
  
  This file will only be read at the rebuild task start. The resulting regular expression is written to "files/optRE/disclaimer.txt"
....





2018-04-13
fixed in assp 2.6.2 *Fortress* build 18103:

- Depending on the configuration and the installed/enabled perl modules, the HMM check and the Bayesian check may caused an "malformed UTF-8 character" exception, followed by a SMTP-worker restart.



2018-04-12
fixed in assp 2.6.2 *Fortress* build 18102:


- **** IMPORTANT ****  an unhandled exception caused very high CPU usage
 this BUG is in the code since assp 2.3.4 13156 (I'm sorry)




2018-04-10
fixed in assp 2.6.2 *Fortress* build 18100:


- the analyzer now prevents duplicate feature matching lines

- because the DKIM check was skipped, if assp has changed or removed headerlines, DKIMWLAddresses and DKIMNPAddresses was not working in every case

- myNameAlso was synchronized, this is no longer the case

- on some OS the 'autoflush' was not working for rebuild output files


changed:

- a regular expression containing the values of myName and myNameAlso is added to 'trustedAuthForwarders' every time (if myName is not set to ASSP.nospam)

- the recommended version of Mail::DKIM::Verifier (Mail::DKIM) is changed to 0.50


2018-04-04
fixed in assp 2.6.2 *Fortress* build 18094:

- the scheduled blockreport design was still broken, if no blocked mail was found

- if a very short time range (eg. less than 5 minutes) was defined for a statistic graph, an "modulus by 0" exception caused a mainthread crash


added:

'trustedAuthForwarders','X-Original-Authentication-Results Trusted Forwarder*'
 If an email contains a valid DKIM signature and the signature protects the "X-Original-Authentication-Results" header line in its h= tag (RFC7601) and the host in this header line matches
 this regular expression, DMARC will fully trust the provided original authentication results for SPF and DKIM.
 For example:  mx\d*\.domain\.com or ^2\.2\.2\.2$'


changed:

- images\svg.js (images.zip) is updated to version 1.04 - the click on a statistical graph now shows also the date (not only the time)

- for whitelist modifications and reports using the email-interface, the 'WhitelistPrivacyLevel' states (global,domain,privat) are show in addition to prevent confusion

- if hash data are shown in the GUI-Edit dialog, a sort (up/down ward) option is available


2018-03-28
fixed in assp 2.6.2 *Fortress* build 18087:

- the 'userAttach' functional enhancement (build 18085) was not recognized by the mail analyzer



2018-03-26
fixed in assp 2.6.2 *Fortress* build 18085:

- If an emailaddress, that contains a '+' was used in any address list matching parameter, assp never found a match, because the '+' was missinterpreted as a regular expression quantifier.

- enhance logging for 'enhanced Originated IP detection'

- the blockreport design was broken, if no blocked mail was found



changed:

- The default value for 'PenaltyError' is changed to '554 5.7.1 Error, send your mail to postmaster@LOCALDOMAIN to ensure delivery'.


- 'userAttach' got a functional enhancement
  ASSP_AFC.pm is updated to version 4.78 to support the same behavior.
  ...
  It may possible, that you want assp to deliver mails sent from a specific domain or emailaddress any way (without an attachment check). For security reasons this behavior can be only forced,
  if the sender was validated by SPF and/or DKIM and/or SMIME/PGP (Sig). The check is done by assp at runtime (mail processing) only!
  The definition described below must be done sepately for evey "good","block" as well as "zip" tag, for which the attachment check should be skipped.
  The (not case sensitive) definition tag starts with NoCheckIf= , followed by at least one state of "spf","dkim" or "sig".
  These states can be AND combined by writing them simply together like SpfDkim or SpfDkimSig in one word. To combine them in an OR logic, separate them by a dot like: Spf.Dkim .
  An combination for OR - AND would be: Spf.DkimSig . Whitespaces are not allowed in a NoCheckIf= definition!
  
  spf - the mail passed the SPF check - Notice: to validate against IP addresses for non SPF domains, use SPFoverride
  dkim - the mail is DKIM signed and passed the DKIM check
  sig - the mail contains a valid SMIME or PGP signature
  
  examples:
  ~~allowSDSSIn=>good-in=>NoCheckIf=SpfDkim.SpfSig,block-in=>NoCheckIf=SpfDkim.SpfSig
  sender@domain.org=>~~allowSDSSIn
  or<br />
  sender@domain.org=>good-in=>NoCheckIf=SpfDkim.SpfSig,block-in=>NoCheckIf=SpfDkim.SpfSig
  which means: for sender@domain.org (sender) the good and the block check will be skipped, if the mail is SPF checked and DKIM validated - or the mail is SPF checked and has a SMIME/PGP signature.
  
  *@domain.org=>good-in=>NoCheckIf=Dkim.Sig,block-in=>NoCheckIf=Dkim.Sig
  which means: for the sending domain @domain.org the good and the block check will be skipped, if the mail is DKIM validated or has a SMIME/PGP signature.
  ...
  

- The template file 'dkim/dkimconfig.txt' is updated to version 1.01 to describe additionally DKIM settings

  ...
  # Inside the selector section you can define any supported value. Please read RFC 4871 or the documentation of the Perl module
  # Mail::DKIM to findout what values are for!
  #
  # For example:
  #    Identity=EMAILADDRESS
  #    Timestamp=0
  #    Expiration=86400
  #
  # The following replacement will be done by assp in every defined value:
  # The litteral DOMAIN will be replaced by the senders domain part.
  # The litteral USER will be replaced by the senders user part.
  # The litteral EMAILADDRESS will be replaced by the senders emailaddress.
  # The current time will be added at runtime to the values defined for Timestamp and Expiration, The values have to be defined in seconds!
  ...  


- An better example for Microsoft Exchange (AD) is added to 'LDAPFilter'

  ...
  or (eg. AD/Exchange 2013/2016)
 (&(|(|(|(|(&(objectclass=user)(objectcategory=person))(objectcategory=group))(objectclass=publicfolder))(!(objectclass=contact)))(objectclass=msExchDynamicDistributionList))(proxyaddresses=smtp:EMAILADDRESS)(!(msExchHideFromAddressLists=TRUE)))



- If 'AddDKIMHeader' is set to ON, the following X-ASSP- header lines will be added to incoming emails and .eml files:
  
  X-ASSP-DKIMidentity: IDENTITY-STRING
  X-ASSP-DKIM-FlagState: [whitelisted][, noprocessing]




2018-03-06
fixed in assp 2.6.2 *Fortress* build 18065:


added:

'DKIMWLAddresses','Whitelist these Addresses for valid DKIM Signature *'
 'If a valid DKIM or DomainKey signature is found and the signature identity (e.g. i=user@domain.tld) matches any of these addresses, the mail will be processed as Whitelisted.
  Note this matches the end of the identity address, so if you don't want to match subdomains then include the @. Note that example.com would also match spamexample.com but .example.com
  won't match example.com. Wildcards are supported. For example: sourceforge.net|group*@google.com|.example.com
  It is possible to make this check recipient dependend (eg: on a set of local domains and/or local users). Use wildcards (* and ?) to define domains.
  
  Use the following syntax to do this:
  
  *@anydomain=>*@any_local_domain - for domain to domain
  *@*.anydomain=>*@any_local_domain - for any sub-domain to domain
  user@anydomain=>*@*.any_local_domain - for user to any sub-domain
  It is possible to define more than one entry at the left and the right side of the definition (=>), like:
  *@anydomain|*@other_domain=>*@any_local_domain|*@other_local_domain - always separate multiple entries by pipes
  
  It is also possible to use a GroupDefinition in any or both sides, like:
  [identitygroup]=>[recipientgroup]
  [identitygroup1]|[identitygroup2]|*@domain=>[recipientgroup1]|[recipientgroup2]|user@local_domain
  
  NOTICE - that the local email addresses and domains are not checked to be local once.
  To define special characters like '* and ?' - use their hexadecimal regex representation like '\x2A and \x3F'.'


'DKIMNPAddresses','Noprocessing these Addresses for valid DKIM Signature *'
 'If a valid DKIM or DomainKey signature is found and the signature identity (i=user@domain.tld) matches any of these addresses, the mail will be processed as NoProcessing.
  Note this matches the end of the identity address, so if you don't want to match subdomains then include the @. Note that example.com would also match spamexample.com but .example.com
  won't match example.com. Wildcards are supported. For example: sourceforge.net|group*@google.com|.example.com
  It is possible to make this check recipient dependend (eg: on a set of local domains and/or local users). Use wildcards (* and ?) to define domains.
  
  Use the following syntax to do this:
  
  *@anydomain=>*@any_local_domain - for domain to domain
  *@*.anydomain=>*@any_local_domain - for any sub-domain to domain
  user@anydomain=>*@*.any_local_domain - for user to any sub-domain
  It is possible to define more than one entry at the left and the right side of the definition (=>), like:
  *@anydomain|*@other_domain=>*@any_local_domain|*@other_local_domain - always separate multiple entries by pipes
  
  It is also possible to use a GroupDefinition in any or both sides, like:
  [identitygroup]=>[recipientgroup]
  [identitygroup1]|[identitygroup2]|*@domain=>[recipientgroup1]|[recipientgroup2]|user@local_domain
  
  NOTICE - that the local email addresses and domains are not checked to be local once.
  To define special characters like '* and ?' - use their hexadecimal regex representation like '\x2A and \x3F'.'





2018-03-05
fixed in assp 2.6.2 *Fortress* build 18064:


changed:

- 'DoDomainCheck','Validate MX or A Record' is changed
  'If activated, the sender address and each address found in the following header lines ....
   ....
   If only an IP-address is found for a MX, the A record check fails, if the IP has no valid PTR and DoInvalidPTR is enabled.


- The analyzer now shows all log lines produced while the analyze task is running.

- The DKIM check now fails, if the signature_reject_reason is 'public key: not available'



added:

- the hidden config parameter 'AllowCodeInRegex' is added to enable the code execution in regular expressions

$AllowCodeInRegex = 0;   # (0/1) allow the usage of executable perl code (?{code_to_run}) in regular expression - change this ONLY, if you really know what you do


- 'SSLAdvancedServerConfigFile','File with Advanced SSL-Server Parameters'
  'Full path to the text file containing the server's advanced SSL parameters.
  If your SSL-server configuration requires additionally SSL-parameters according to IO::Socket::SSL and/or Net::SSLeay (for example: special Elliptic-Curve Diffie-Hellmann Key Exchange)
  and you don't want to use SSLWEBConfigure , SSLSTATConfigure , SSLSMTPConfigure confuration options, you may define a text file with your parameters here.
  NOTICE: assp will not check, if your configuration settings, made in this file, are valid - they are used as defined. In doubt, use SSLDEBUG to trace their effects.
  The settings in this file are passed as part of the IO::Socket::SSL configuration HASH to IO::Socket::SSL as they are defined.
  Any setting redefined in this file will override default internal assp settings as well as the above assp SSL configuration settings.
  The assp SSL settings below this tag are not effected.

  The syntax in this this file is the same like a HASH definition in Perl:
  - lines starting with an # are comments and are ignored
  - empty lines are ignored
  - each definition for a parameter has to be terminated with a comma
  - keyword and value have to be separated with =>

  example:
  # this is my special Elliptic-Curve Diffie-Hellmann Key Exchange for all listeners
  SSL_dh_file => full_path_to_your_DH-File,
  SSL_ecdh_curve => secp384r1,
  next-key => {
    subkey1 => subvalue1,
    subkey2 => [ARRAY-item-0, ARRAY-item-1, ...],
    subkey3 => {
      key => value,
      ...,
    },
    ...,
  },
  ...,
  last-key =>last-value,

  The defined file is watched for changes by assp. An possible reread of this file is only shown if SSLDEBUG is set to ON.
  It is highly recommended to read the documentation of IO::Socket::SSL and/or Net::SSLeay!
  Because the location of this file can be outside the assp folder, it can't be modified using assp! Please use an external file editor.




2018-02-28
fixed in assp 2.6.2 *Fortress* build 18059:

- improved HMM processing and detection for small emails



changed:

- if CCchangeMSGDate is used, only the value for the seconds will be randomly changed



2018-01-28
fixed in assp 2.6.2 *Fortress* build 18028:

- downloading files using HTTPS may caused a SEGV exception, if the download server has supported OCSP

- certificate validation may has been failed if 'proxyserver' was configured

- assp was possibly crashing, if there was no module available that implements the 'sha_hex' function



added:

- the hidden variable 'importDBShowProgress' is implemented
  setting this variabe to zero or 'undef', prevents the progess lines from the database-import function, to be written to maillog.txt - default is 1 


2018-01-18
fixed in assp 2.6.2 *Fortress* build 18018:

- workaround for a Regexp::Optimizer bug, where some times \r plus quantifier in a regular expression is optimized as \r\? - in case assp skips the optimization

- warnings and errors caused by the DKIM configuration are now shown in the GUI

- MaxAllowedDups may caused stucking workers in case of a havy workload

- a not installed perl module Thread::State caused exceptions and restarted high workers - the rebuildspamdb task was not running


- this version is released as fixup version 2.6.1 build 18022 on the sourceforge file download page


2018-01-18
fixed in assp 2.6.2 *Fortress* build 18018:

- 'MaxAllowedDups' was not working correctly under permanent havy workload conditions

- 'noCollectRe' was ignored, if a suspicious virus was found in the stored .eml file



added:

'MSGIDsigProc','Process valid Message-ID Signed Mails','0:normal|1:whitelisted|2:noprocessing|3:whitelisted and noprocessing',
 'How are received mails processed, if they contain a valid local MessageID-Signature/Tag (eg. because it is an answer/reply to a tagged mail).
 The default value is \'whitelisted\'. Notice that noprocessing and/or whitelisted may prevent those mails from being collected in the corpus folders - check 
 noProcessingLog and NonSpamLog.'





2018-01-08
fixed in assp 2.6.2 *Fortress* build 18008:

- on some systems the maillog.txt OS buffer was not flushed and so the file tail was not readable just in time

- the perl garbage collection for the rebuild spamdb task was not working, if 'useDB4Rebuild' was not enabled

- if the very important perl module 'LWP::Protocol::https' is not installed, assp will try the installation at startup
  ******************************************************************************************************
  ************  IF THIS IS NOT POSSIBLE - install the module LWP::Protocol::https manually! ************
  ******************************************************************************************************
  nix:
  >cpan LWP::Protocol::https

  windows:
   active perl:
  >ppm install LWP-Protocol-https
  
   strawberry perl: (should normaly already include this module)
  >cpan LWP::Protocol::https 
  

- possibly unwanted X-ASSP passing reason hearders were added to outgoing mails - this is no longer the case

- the 'valid_Message-ID_signature' check has overwritten other whitelisting and noprocessing reasons, this caused reply mails stored outside the corpus





2017-12-28
fixed in assp 2.6.2 *Fortress* build 17362:

- SMIME signing was completely skipped for a defined sender address, if a recipient exception (eg. rcpt=-recipient@domain.com) was defined for this sender address
  this issue is fixed in ASSP_AFC 4.77
  

- Changing the certificates, KEY-password and RSA-privat-keys caused unexpected errors written to the maillog.txt for each defined SSL-listener
  until all required parameters were changed by assp in a sequence.
  The renew of the SSL-listeners and SSL-context is now delayed until all required SSL-parameters are changed.
  



2017-12-21
fixed in assp 2.6.2 *Fortress* build 17355:

- public released  2.5.6 build 17355

2017-12-18
fixed in assp 2.5.6 *Fortress* build 17352:

- a memory leak in report connection handling is fixed

- ASSP_AFC: non ASCII characters in 
  'ASSP_AFCReplBadAttachText','Replace Bad Attachments Text'
  and
  'ASSP_AFCReplViriPartsText','Replace Virus Parts Text'
  were wrong MIME-encoded in the delivered mail

changed:

- 'MaxAUTHErrors','Max Number of AUTHentication Errors'
....
If your MTA offers AUTH without supporting it (has no user accounts) define a negative value here (e.g. -1).
In this case assp and the MTA will function as an AUTH-honeypot, the peer will get an penalty at the first AUTH request.
....

- in case a blocked attachment mail is resent in block reports by admins, the '[no] scan' option is added to the request
  mail body

- ASSP_AFC version 4.75 fixes a minor logging output issue

- ASSP_AFC version 4.75 has a new function for VBA detection. To enable it set
  $ASSP_AFC::VBAcheck = 0;     # enable(1)/disable(0) the executable VBA script check
  to '1'


2017-12-07
fixed in assp 2.5.6 *Fortress* build 17341:

changed:

- improved connection data cleanup in idle mode (sleeping threads)

- typo corrections in the GUI



2017-12-05
fixed in assp 2.5.6 *Fortress* build 17339:


changed:

- It is now possible to define a SSL-listener for all listeners (SMTP, WEB, STAT) - to do this write SSL: in front of the listener definition.
  Examples:
  225
  SSL:325
  225|SSL:325
  127.0.0.1:225
  192.168.1.1:225|192.168.2.1:225|SSL:192.168.1:325

- improved error handling for the new SSL code in build 17338



2017-12-04
fixed in assp 2.5.6 *Fortress* build 17338:

- orphaned connection data and handles may caused errors like:
  - too many open files
  - invalid filehandle
  - ....
  It was also possible, that the connection screen and the worker status screen have shown incorrect data.
  On some systems those orphaned connections caused unexpected high CPU and memory usage.

changed:

- 'maxSSLRenegotiations' is only checked for incoming mails, not for local and outgoing mails

- the default value for 'maxSSLRenegotiations','Maximum Allowed SMTP SSL Client-Initiated-Renegotiations' is changed to 10

- SSLDEBUG now writes the debug information of the SSL handling to maillog.txt

- For all SSL listeners and STARTTLS connections where assp acts as server and all SSL/TLS connections to defined destinations only a single SSL-Context is used
  for each peer to speedup the SSL connections and to reduce memory usage.
  Setting the hidden configuration parameter 'enablePermanentSSLContext' to zero or 'undef' will force the old behavior (create and delete the SSL-Context for each connection).
  Setting the hidden configuration parameter 'enablePermanentSSLContext' to zero or 'undef' is not related to SNI configurations. For SNI server configurations a permanent
  SSL-Context is used every time.

- improved SNI support for environments with a large amount of SSL-certificates and keys

- speed improvement of the rebuildspamdb task

added:

- ASSP_AFC version 4.74 is able to check for 'Microsoft Office Compound File Binary (OLE)' attachments - the exception tag is :MSOLE

- The above referenced hidden configuration variable 'enablePermanentSSLContext' is added  
  our $enablePermanentSSLContext = 1;      # (0/1) enable usage of permanent SSL Context - maxunused = 1 hour, max lifetime = 1 day (default = 1)
  If set, assp will reuse an available SSL-Context unitl this context is not older than one day or it was unused for over one hour.



2017-11-19
fixed in assp 2.5.6 *Fortress* build 17323:

- on 'apply changes', google chrome (v57 and higher) may has thrown an error about 'x-xss-protection', if the GUI in http mode was used by user 'root'

- it was possible that setting 'FileScanCMD' to 'NORUN' caused stucking workers, if the online filesystem virus scanner detected a virus and locked the checked
  file permanently
  
- ClamAV and the FileScanner were called on no content (zero bytes), which sometimes caused an unexpected virus detection or a wrong content replacement by ASSP_AFC

 
- ASSP_AFC version 4.72 fixes a logging mistake

  

2017-11-13
fixed in assp 2.5.6 *Fortress* build 17317:

changed:

- If the filename for an attachment contains no extension, but the given Content-Type MIME header provides the filetype, the related extension is added
  to the file name to prevent unexpected blocked attachments.

  related to this change, the ASSP_AFC.pm Plugin is updated to version 4.71
  
  

2017-11-06
fixed in assp 2.5.6 *Fortress* build 17310:

- If 'StoreCompleteMail' was set to 'disabled'(0), the stored corpus files (.eml) were smaller than the value defined for 'MaxBytes'.


2017-11-03
fixed in assp 2.5.6 *Fortress* build 17307:

- switching the effective and real UID on BSD based OS may have been failed

- If ASSP was unable to accept a client socket connection, a retry may has caused a SEGV on some OS. The retry is now skipped.

- The output of the used UserAttach ZIP: regular expression in the analyzer is now normalized.



changed:

- The default value of 'tlsValencePB' 'OK, Is a SSL/TLS connection, default=0 +' is changed from -10 to zero.

- IP's with AUTH errors, faked AUTH-errors and SSL-renegotiation attacks are now reported to the Grip-list server

- Notification emails are now showing the matched log-text and the used regular expression at the end of the email.


added:

- To prevent DoS attacks in SSL renegotiations the hidden configuration variable 'maxSSLRenegDuration' is added - the default value is 10 seconds.
# the SSL/TLS renegotiation counter will be reset after this number of seconds without a renegotiation request and any regular data are sent or received
our $maxSSLRenegDuration = 10;


'maxSSLRenegotiations','Maximum Allowed SMTP SSL Client-Initiated-Renegotiations'
 'Maxumum count of allowed SSL/TLS client initiated renegotiations to prevent DoS.
 If this count is exceeded in a connection within 10 seconds, the connection is terminated, the connected IP is registered in banFailedSSLIP and new connections
 from this IP address are rejected for 15-30 minutes. An IP-Score of PenaltyExtreme but at least 150 is used for the IP address.
 Zero disables this feature - default is : 2 attempts.'



2017-10-24
fixed in assp 2.5.6 *Fortress* build 17297:

- upper case UserAttach templates caused an exception in attachment processing
  ASSP_AFC 4.70 is required too, to fix this issue
  NOTICE: build 17297 is at least required to use ASSP_AFC version 4.70 !
    


2017-10-08
fixed in assp 2.5.6 *Fortress* build 17281:

- active connection counting and limiting was not working if clients/servers used the STARTTLS command

- analyzing the memory usage in the threads cause a SEGV in 'Devel::Size' on newer perl versions - this feature is deactivated in the code permanently


changed:

- Because sourceforge is discontinuing the CVS support, the versioning support for the ASSP development is sitched to SVN.
  Starting with this build the download location is changed to:
  
  https://sourceforge.net/p/assp/svn/HEAD/tree/assp2/trunk
  
  The folder structure and file location in SVN is the same like it was in CVS.
  
  Previouse versions (including V1) and builds are still available at CVS for download, as long as souceforge provides browser access to CVS.
  
  http://assp.cvs.sourceforge.net


2017-10-03
fixed in assp 2.5.6 *Fortress* build 17276:

changed:

- On systems which supports the thread priority settings, some time critical task are running faster (clean PBBlack, rebuildspamdb).


2017-10-02
fixed in assp 2.5.6 *Fortress* build 17275:

- On a secured Windows Server 2016, it was possible that the options to 'stop' and 'pause' the running ASSP service were not available (greyed out).
  In this case, it was also not possible to manage the service using 'sc' and 'net'.




2017-09-25
fixed in assp 2.5.6 *Fortress* build 17268:


- There were two options missing in the Archive::Libarchive::XS call in ASSP_AFC, which are not supported without a special definition per default.
  - raw compression formats
  - empty compressed files
 Both types caused an 'Unrecognized archive format' exception at decompression time and an additionally call to a second (or third) decompression engine (eg: 7zip)
 Version 4.65 fixes this issue - those files are now decompressed by Archive::Libarchive::XS, if they are supported by the module.

- it was possible, that the used SSL/TLS cipher was added multiple time to the assp 'Received:' MIME-header line
 

changed:

- improved MS exchange MTA detection - related to '$CCchangeMSGDate', see build 17261

- 'DoSameSubject' uses a similarity check instead of an equality check

- 'MaxAllowedDups' uses a similarity check instead of an equality check

- using ASSP_AFC 4.65, the version numbers of the archive modules are now shown in the Perl-modules status screen

- if Encode::Detect is installed, it will be used instead of Encode::Guess to provide better decoding results



2017-09-18
fixed in assp 2.5.6 *Fortress* build 17261:


- if 'STARTTLS' was used to resend a mail, the second 'EHLO' possibly used 'localhost.localdomain' as hostname (instead of 'myName'), which may caused problems on some MTA's,
  because they expect to get the same EHLO again - both EHLO commands are now using 'myName'


changed:

- the function of the hidden parameter '$CCchangeMSGDate' is enhanced

our $CCchangeMSGDate = 0;                ## (0..31) change the 'Date:' MIME-header on CCmail (sendHamInbound), ForwardSpam (sendAllSpam) and resend mail
                                         ## MS-Exchange may require this, because duplicate mails will be removed silently, if they contain an equal 'Date:...' MIME-header
                                         # bit 0 = 1 ( +1) -> set all bits (1 - 4) to 1 for backward compatibility ( same as 30 -> 2+4+8+16 )
                                         # bit 1 = 1 ( +2) -> force change at CCmail
                                         # bit 2 = 1 ( +4) -> force change at ForwardSpam
                                         # bit 3 = 1 ( +8) -> force change at resend mail
                                         # bit 4 = 1 (+16) -> general disable the automatic detection of a local MS-Exchange MTA by checking the SMTP banner / greeting
                                         ## The default is zero (0), which means: the 'Date:...' MIME-header is not forced to be changed in either case,
                                         ## but it will be changed, if a MS-Exchange MTA is detected using $ExchangeBannerRe against the SMTP banner / greeting.
                                         ## To disable this feature completely - set this value to 16.




2017-09-17
fixed in assp 2.5.6 *Fortress* build 17260:

- Depending on the used perl version the following chinese charsets were not supported by the perl module 'Encode', even the module 'Encode::HanExtra' was 
  installed:  big5plus , euc-tw , gb18030.
  These charsets are now registered to 'Encode' on NON-EBCDIC systems by assp. The installation of the perl module 'Encode::HanExtra' is mandatory to support these
  charsets.

- If an unknown (not registered to Encode) MIME-charset was found in an email, it was possible that the thread died unexpected throwing an UTF-8 fatal error.
  Those mail data are now processed binary, in rare cases the content of such a mail is ignored.


added:

- ASSP_AFC version 4.62 now supports the definiton of custom excutable checks. Special coding in lib/CorrectASSPcfg.pm is required.

our $SkipExeTags = [];  # customized skip tags ('CUST1','CUST2'...) for external executable checks defined in lib/CorrectASSPcfg.pm
                        # usage in 'UserAttach' : ':CUST1',':CUST2'
our $checkExeExternal;  # custom subroutine to check executables external (eg. lib/CorrectASSPcfg.pm) - $ASSP_AFC::checkExeExternal->($self,\$sk,\$buff,$raf,\$pdf) 
                        # if the internal check has not found an executable
                            # self - the ASSP_AFC object for this mail
                          # the following paramters are refences to scalars
                            # sk - active skip tags at runtime
                            # buff - up to first 64 binary bytes of the attachment
                            # raf - complete binary content of the attachment
                            # pdf - decoded binary PDF content, if the attachment is a PDF , otherwise undef

our $checkExeExternalForce; # same as $checkExeExternal - but called weather the internal check has found an executable or not - 
                            # $ASSP_AFC::checkExeExternalForce->($self,\$sk,\$buff,$raf,\$pdf,\$type)
                              # ....
                              # type - contains the previous detected executable type description or undef



2017-09-11
fixed in assp 2.5.6 *Fortress* build 17254:

changed:

- attachment blocking:
  - If a file extension regular expression is wrong defined as (1) '*' (leading asterix) or (2) '?' (leading question mark) the definition no longer fails.
    Instead the regular expression is now corrected to (1) '.*' and (2) '.?' and a waring is written to the maillog.txt.



2017-09-04
fixed in assp 2.5.6 *Fortress* build 17247:

- ASSP_AFC 4.61 is released

- if any of HTML parsers was selected, the modul was not shown in Module Stats screen


changed:

- an new exception switch is added to the 'UserAttach' function - ASSP_AFC 4.61 is required to provided this also for compressed attachments (zip:...)

description changes:
....
  Notice the leading -- in front of the --doc regular expression in the last example. The leading -- removes all occurences of this regular expression from the resulting entry, 
  here from "block-in" (NOT from block!) at configuration time. You would need to define --doc in the "block=>" entry as well, to remove such occurences there.
  Because the -- exceptions are processed at configuration time, such a definition will not overwrite an opposit rule definition: sender > recipient and recipient < sender
  - which are combined at runtime (attachment check).
  If you want assp to process such a "remove extension directive" at runtime (to make the recipient <> sender rule overwrite working for this address),
  use for example -+doc instead of --doc. Be carefull creating weak blocking rules using the -+ directive. Make sure the sender and recipient address can
  NOT be faked (eg. SPF-strict, DKIM)
  ASSP will resolve all extension regular expression templates and all rule tempates and will combine them all in to one resulting domain or user attachment rule.
  ASSP will throw a warning, if a rule template is define multipe times - like: *@domain.com=~~commonRule,~~devRule - here ~~devRule already contains ~~commonRule
  It may happen, that the resulting attachment rule contains one or more extension regular expressions multiple times - this is harmless and will be internaly corrected,
  but try to prevent it.
  
  This feature replaces all of the above level definitions (BadAttachL1 ....L2 ....), if at least one valid (not zip:... from the ASSP_AFC Plugin) attachment blocking 
  or allow rule is found for the envelope sender or the first envelope recipient of a mail!
  good, good-out and good-in - and also - block, block-out and block-in - will be logical OR (pipe '|') combined from the matched rule for the first envelope recipient 
  and the envelope sender - according to the mail flow.
  The defined blocking rules for the envelope sender and the first envelope recipient are than combined together using the same OR logic (pipe '|') at runtime.
  The attachment block rules for a specific email are looking as follows: (replace block with good to get the attachment good rules)
  incoming mail: recipient-block|recipient-block-in|sender-block|sender-block-in
  outgoing mail: sender-block|sender-block-out|recipient-block|recipient-block-out
....



added:

- In the 'config info' section of the left menu, a new link to 'Privat Config Notes' is available. It can be used for general notes and privat documentation.



2017-09-01
fixed in assp 2.5.6 *Fortress* build 17244:

- a domain name in an URL that starts with number and dash like "2017-", was wrong detected as strong obfuscated IP address

changed:

- the over a year existing hidden configuration parameter 'HTMLParser' is now changed to a regular configuration parameter

**** ATTENTION ****
 If you still use this hidden parameter, remove any related code from the startup script or CorrectASSPcfg.pm BEFORE you upgrade to this version!
 Configure the parameter after the first start in the GUI!
*******************

 'HTMLParser','Use this HTML Parser','0:buildin|1:HTML::Strip|2:HTML::TreeBuilder',
 
  Commonly HTML/XML is used in emails. The HTML/XML tags are too variable to use them for Bayesian- and Hidden Markov Model analysis.
  For this reason, these tags are removed from the HTML/XML content to get the clean text of the email.
  The assp buildin regular expression HTML-parser is now used for decades. It got large improvements over the time, how ever - the correctness is only 95%.
  But assp is able to use HTML::Strip or HTML::TreeBuilder, which are powerfull perl modules to parse HTML code nearly 100% correct.
  HTML::Strip and HTML::TreeBuilder are getting there best result, if the full HTML code is provided. In case you select any of the both modules,
  it is recommended to set MaxBytes to 50000 (be carefull on heavy load systems - spam bomb regular expressions will take longer using 50000!).
  HTML::Strip is the fastest module and the default setting, because it is written in C. If you can not install it, use the buildin or HTML::TreeBuilder.
  HTML::TreeBuilder is the slowest way to parse HTML code, the assp buildin processing is three times faster, HTML::Strip is five times faster than HTML::TreeBuilder.
  If you select any of the perl modules and this module is not installed, fails to load or it returns no content, assp falls back to the buildin code.

 **** Switching from the buildin HTML parser to HTML::Strip a 10% faster rebuildspamdb task is expected (for MaxBytes = 50000).
 **** HTML::Strip improves the word processing for Bayesian and HMM, because of a much better language detection in the word stemming engine.
 **** SpamBombs will work more accurate, if HTML::Strip is used

  To provide any of the perl modules HTML::Strip and HTML::TreeBuilder you need to install them using PPM or CPAN.
  The mod_inst.pl and mod_inst_ocr.pl got an update to version 2.03 to install both modules.
  
  ASSP_AFC.pm version 4.60 is available. It got an improvement by an 40 seconds timeout watchdog ($ASSP_AFC::maxProcessTime), to prevent stucking workers.
  

2017-08-31
fixed in assp 2.5.6 build 17243:

- if two email addresses were defined in the from: header tag - like: from: dummy@localdomain.com <sender@senderdomain.org>
  the first address was used by assp instead of the right second. This made spam detection difficult and caused the DKIM check to fail.
  
  
added:

- 'UserAttach' got an enhancement - it is now possible to define and use regular expression templates as well as rule templates
  - the GUI is changed
  .....
  block=> rules cause specific file types to be blocked (but does not block the others).
  good=> rules block all file types except for those specified in the rule.
  ....
  
  It is possible to define templates (see the preceding single tilde ~ ) for extension regular expression and to use them in any entry at any place
  (except other extension regular expression templates) - like:
  
  ~executables => cmd|com|cpl|exe|exe\-bin|lnk|pif
  ~scripts => js|pl|ps1?|sh|vb[es]?|wms|ws[cfh]
  user1@domain.tld => block => ~executables|~scripts|mht|ms[cipt] , block-in =>:MSOM , block-out => :CERTPDF
  [allDomains] => block => ~executables|:CSC
  
  Extension regular expression template names have to start with a single tilde. Allowed name characters are A-Z, a-z, 0-9 and underscrore.

  It is also possible to define rule templates and to use them in combination with any other rule definitions or rule templates.
  Rule templates starts with two tilde (~~template). Allowed name characters are A-Z, a-z, 0-9 and underscrore. For example:
  
  ~~commonRule=>block=>~executables|~scripts|xls,block-in=>:MSOM,block-out=>:CSC
  ~~devRule=>~~commonRule=>block-out=>:WIN|:ELF
  ~~allowALL=>good=>*
  *@domain.com=>~~commonRule
  [IT]=>~~devRule
  user@domain.com=>~~commonRule,~~anySecondRule,~~anyOtherRule=>block=>~anyExt,block-in=>~otherExt|xls|--doc
  
  Notice the leading -- in front of the --doc regular expression in the last example. The -- removes all occurences of this regular expression from the resulting entry,
  here from block-in.
  ASSP will resolve all extension regular expression templates and all rule tempates and will combine them all in to one resulting user attachment rule.
  ASSP will throw a warning, if a rule template is define multipe times - like: *@domain.com=~~commonRule,~~devRule - here ~~devRule already contains ~~commonRule
  It may happen, that the resulting attachment rule contains one or more extension reglar expressions multiple times - this is harmless, but try to prevent it.
  ....
  
  


2017-08-11
fixed in assp 2.5.6 build 17223:

- public released  2.5.6 build 17223


